package com.novel.api.controller;

import java.util.Date;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import com.novel.api.entity.JSONResponse;
import com.novel.api.entity.Novel;
import com.novel.api.entity.NovelStore;
import com.novel.api.entity.WeixinUserInfo;
import com.novel.api.pojo.NovelDetailView;
import com.novel.api.pojo.NovelView;
import com.novel.api.pojo.PlayTourListView;
import com.novel.api.pojo.PlayTourView;
import com.novel.api.service.CommonService;
import com.novel.api.service.NovelService;
import com.novel.api.service.UserService;

/**
 * 小说记录
 * 
 * @author Administrator
 *
 */

@RestController
@RequestMapping("/novel")
public class NovelController {
	Logger logger = LoggerFactory.getLogger(NovelController.class); 
	@Autowired
	NovelService novelService;
	@Autowired
	CommonService commonService;
	@Autowired
	UserService userService;
	
	
	/**
	 * 小说阅读页
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_index", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_index(int sex_status,int type_status,int novel_state) {
		logger.info("进入小说首页");
		JSONObject json= new JSONObject();
		Novel param=new Novel();
		param.setSex_status(sex_status);
		
		List<NovelView> gdlist=novelService.findNovelViewByCondition(param);//滚动list
		
		List<NovelView> zdlist=novelService.findNovelViewByCondition(param);//本周主打
		
		List<NovelView> phlist=novelService.findNovelViewByCondition(param);//排行榜
		
		List<NovelView> newlist=novelService.findNovelViewByCondition(param);//新书试读
		
		List<NovelView> lzlist=novelService.findNovelViewByCondition(param);//连载更新
		
		List<NovelView> rqlist=novelService.findNovelViewByCondition(param);//人气推荐
		
		json.put("gdlist", gdlist);//滚动list
		json.put("zdlist", zdlist);//本周主打
		json.put("phlist", phlist);//排行榜
		json.put("newlist", newlist);//新书试读
		json.put("lzlist", lzlist);//连载更新
		json.put("rqlist", rqlist);//人气推荐
		return JSONResponse.success(json);
	}
	
	/**
	 * 小说首页查询
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_search", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_search(String novel_name) {
		logger.info("进入小说首页书库");
		Novel param=new Novel();
		param.setNovel_name(novel_name);
		List<Novel> list=novelService.findSearch(param);
		return JSONResponse.success(list);
	}
	/**
	 * 小说阅读页书库
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_store_index", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_store_index(int sex_status,int type_status,int novel_state) {
		logger.info("进入小说首页书库");
		Novel param=new Novel();
		param.setSex_status(sex_status);
		param.setType_status(type_status);
		param.setNovel_state(novel_state);
		List<Novel> list=novelService.findSearch(param);
		return JSONResponse.success(list);
	}
	/**
	 * 小说阅读页
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_main", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_main(int user_id,int novel_id) {
		logger.info("进入小说阅读页");
		logger.info("user_id："+user_id+"novel_id:"+novel_id);
		JSONObject json= new JSONObject();
		JSONObject param= new JSONObject();
		param.put("user_id", user_id);
		param.put("novel_id", novel_id);
		int vip_status =userService.findUserByIdAndVip(user_id);//是否在vip时间内
		List<NovelDetailView> detail_list=novelService.findNovelDetailViewByCondition(param);//目录
		if(detail_list==null ||detail_list.size()==0){
			return JSONResponse.error("该小说无内容");
		}
		NovelView novelview=novelService.findNovelViewByID(novel_id);//小说信息
		NovelDetailView detail=detail_list.get(detail_list.size()-1);
		
		json.put("user_id", user_id);//userid
		json.put("vip_status", vip_status);//是否在vip时间
		json.put("novel", novelview);//小说
		json.put("detail", detail);//最新章节
		json.put("detail_list", detail_list);//目录
		// 数据入库
		return JSONResponse.success(json);
	}
	

	/**
	 * 查看书库
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_store", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_store(int user_id) {
		logger.info("进入查看书库");
		logger.info("user_id"+user_id);
		List<NovelView> view_list=novelService.findByNovelViewByUserid(user_id);
		// 数据入库
		return JSONResponse.success(view_list);
	}
	/**
	 * 添加书到书库
	 * 
	 * @return
	 */
	@RequestMapping(value = "/novel_store_add", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse novel_store_add(int novel_id,int user_id) {
		logger.info("进入添加小说到书库");
		logger.info("novel_id"+novel_id+"user_id"+user_id);
		NovelStore novelStore=new NovelStore();
		novelStore.setBook_state(1);
		novelStore.setNovel_id(novel_id);
		novelStore.setUser_id(user_id);
		novelStore.setUpdate_time(new Date());
		novelStore=novelService.saveAndUpdate(novelStore);
		return JSONResponse.success(novelStore);
	}
	
	 /**
	   * 小说打赏记录
	   */
	@RequestMapping(value = "/paly_tour_detail", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse paly_tour_detail(int novel_id) {
		logger.info("小说打赏记录");
		List<PlayTourView> list=commonService.findByPlayTourViewByNovelId(novel_id); 
		return JSONResponse.success(list);
	}
	

	 /**
	   * 小说打赏排行
	   */
	@RequestMapping(value = "/paly_tour_list", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse paly_tour_list(int novel_id) {
		logger.info("小说打赏排行");
		logger.info("novel_id="+novel_id);
		List<PlayTourListView> list=commonService.findByPlayTourListViewByNovelId(novel_id); 
		return JSONResponse.success(list);
	}
	 /**
	   * 小说章节购买
	   */
	@RequestMapping(value = "/chapter_buy", method = RequestMethod.POST)
	@ResponseBody
	public JSONResponse chapter_buy(int novel_detail_id,int user_id) {
		logger.info("小说章节购买");
		logger.info("novel_id="+novel_detail_id);
		List<PlayTourListView> list=commonService.findByPlayTourListViewByNovelId(novel_detail_id); 
		return JSONResponse.success(list);
	}
	
	
}
